version: 0.2
phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR"
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 557690612191.dkr.ecr.us-east-1.amazonaws.com
      - echo "Setting up environment for ${ENV_FILE:-test}"
      - export WORDPRESS_DB_PASSWORD=${CODEBUILD_WORDPRESS_DB_PASSWORD:-default_password}
      - export MYSQL_ROOT_PASSWORD=${CODEBUILD_MYSQL_ROOT_PASSWORD:-default_root_password}

  build:
    commands:
      - echo "Building the Docker image for ${ENV_FILE:-test}"
      - docker build --build-arg ENV_FILE=env.${ENV_FILE:-test} -t 557690612191.dkr.ecr.us-east-1.amazonaws.com/wp-ecr:${ENV_FILE:-test} .
      - docker tag 557690612191.dkr.ecr.us-east-1.amazonaws.com/wp-ecr:${ENV_FILE:-test} 557690612191.dkr.ecr.us-east-1.amazonaws.com/wp-ecr:latest

  post_build:
    commands:
      - echo "Pushing the Docker image"
      - docker push 557690612191.dkr.ecr.us-east-1.amazonaws.com/wp-ecr:${ENV_FILE:-test}
      - docker push 557690612191.dkr.ecr.us-east-1.amazonaws.com/wp-ecr:latest
      - docker push 557690612191.dkr.ecr.us-east-1.amazonaws.com/wp-ecr:${ENV_FILE:-prod}

      - echo "Ensuring namespace ${NAMESPACE:-wordpress-test}"
      - kubectl get namespace ${NAMESPACE:-wordpress-test} || kubectl create namespace ${NAMESPACE:-wordpress-test}

      - echo "Deploying MySQL Database for $NAMESPACE namespace"
      - kubectl apply -f mysql-deployment.yaml -n ${NAMESPACE:-wordpress-test}
      - echo "Waiting for MySQL to be ready..."
      - until kubectl get pods -n ${NAMESPACE:-wordpress-test} | grep mysql | grep Running; do echo "Waiting..."; sleep 5; done

      - echo "Applying Kubernetes Secrets"
      - kubectl apply -f wordpress-secret.yaml -n ${NAMESPACE:-wordpress-test}

      - echo "Applying Kubernetes Service for Load Balancer"
      - kubectl apply -f service.yaml -n ${NAMESPACE:-wordpress-test}

      - echo "Deploying WordPress for ${DEPLOYMENT_NAME:-wordpress-test}"
      - kubectl apply -f deployment.yml -n ${NAMESPACE:-wordpress-test}

artifacts:
  files: []
