version: 0.2
phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR"
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 557690612191.dkr.ecr.us-east-1.amazonaws.com
      - echo "Setting up environment for ${ENV_FILE:-test}"
      - export WORDPRESS_DB_PASSWORD=${CODEBUILD_WORDPRESS_DB_PASSWORD:-default_password}
      - export MYSQL_ROOT_PASSWORD=${CODEBUILD_MYSQL_ROOT_PASSWORD:-default_root_password}
      - echo "Updating kubeconfig for EKS access"
      - aws eks update-kubeconfig --region us-east-1 --name wp-cluster --role-arn arn:aws:iam::557690612191:role/eks-access-role
      - echo "Checking Kubernetes cluster access"
      - kubectl cluster-info

  build:
    commands:
      - echo "Building the Docker image for ${ENV_FILE:-test}"
      - docker build --build-arg ENV_FILE=${ENV_FILE:-test} -t 557690612191.dkr.ecr.us-east-1.amazonaws.com/wp-ecr:${ENV_FILE:-test} .
      - docker tag 557690612191.dkr.ecr.us-east-1.amazonaws.com/wp-ecr:${ENV_FILE:-test} 557690612191.dkr.ecr.us-east-1.amazonaws.com/wp-ecr:latest

  post_build:
    commands:
      - echo "Pushing the Docker image"
      - docker push 557690612191.dkr.ecr.us-east-1.amazonaws.com/wp-ecr:${ENV_FILE:-test}
      - docker push 557690612191.dkr.ecr.us-east-1.amazonaws.com/wp-ecr:latest
      - docker push 557690612191.dkr.ecr.us-east-1.amazonaws.com/wp-ecr:${ENV_FILE:-prod}

      - export NAMESPACE=wordpress-${ENV_FILE:-test}
      - echo "Ensuring namespace ${NAMESPACE}"
      - kubectl get namespace ${NAMESPACE} || kubectl create namespace ${NAMESPACE}

      - echo "Deploying MySQL Database for $NAMESPACE namespace"
      - kubectl apply -f mysql-deployment.yaml -n ${NAMESPACE}
      - echo "Waiting for MySQL to be ready..."
      - until kubectl get pods -n ${NAMESPACE} | grep mysql | grep Running; do echo "Waiting..."; sleep 5; done


      - echo "Applying Kubernetes Service for Load Balancer"
      - kubectl apply -f service.yaml -n ${NAMESPACE}

      - echo "Deploying WordPress for ${NAMESPACE}"
      - kubectl apply -f deployment.yml -n ${NAMESPACE}

artifacts:
  files:
    - deployment.yml
    - mysql-deployment.yaml
    - namespace.yaml
    - service.yaml
  discard-paths: yes
    
    
